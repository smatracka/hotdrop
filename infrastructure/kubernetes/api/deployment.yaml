# infrastructure/kubernetes/api/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: drop-commerce
  labels:
    app: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: gcr.io/[PROJECT_ID]/drop-commerce-api:latest
        ports:
        - containerPort: 4000
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "4000"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: mongodb-uri
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: jwt-secret
        - name: ALLOWED_ORIGINS
          value: "https://seller.dropcommerce.pl,https://admin.dropcommerce.pl"
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 5
          periodSeconds: 5
      imagePullSecrets:
      - name: gcr-json-key

# infrastructure/kubernetes/api/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: drop-commerce
spec:
  selector:
    app: api
  ports:
  - port: 80
    targetPort: 4000
  type: ClusterIP

# infrastructure/kubernetes/api/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-hpa
  namespace: drop-commerce
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-deployment
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60

# infrastructure/kubernetes/websocket/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: websocket-deployment
  namespace: drop-commerce
  labels:
    app: websocket
spec:
  replicas: 3
  selector:
    matchLabels:
      app: websocket
  template:
    metadata:
      labels:
        app: websocket
    spec:
      containers:
      - name: websocket
        image: gcr.io/[PROJECT_ID]/drop-commerce-websocket:latest
        ports:
        - containerPort: 4001
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        env:
        - name: NODE_ENV
          value: "production"
        - name: WEBSOCKET_PORT
          value: "4001"
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: redis-url
        - name: ALLOWED_ORIGINS
          value: "https://seller.dropcommerce.pl,https://admin.dropcommerce.pl,https://*.drop.dropcommerce.pl"
      imagePullSecrets:
      - name: gcr-json-key

# infrastructure/kubernetes/websocket/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: websocket-service
  namespace: drop-commerce
spec:
  selector:
    app: websocket
  ports:
  - port: 80
    targetPort: 4001
  type: ClusterIP

# infrastructure/kubernetes/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: drop-commerce-ingress
  namespace: drop-commerce
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "drop-commerce-ip"
    networking.gke.io/managed-certificates: "drop-commerce-cert"
    networking.gke.io/v1beta1.FrontendConfig: "drop-commerce-frontend-config"
spec:
  rules:
  - host: api.dropcommerce.pl
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-service
            port:
              number: 80
  - host: ws.dropcommerce.pl
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: websocket-service
            port:
              number: 80

# infrastructure/kubernetes/frontend-config.yaml
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: drop-commerce-frontend-config
  namespace: drop-commerce
spec:
  redirectToHttps:
    enabled: true
    responseCodeName: MOVED_PERMANENTLY_DEFAULT
